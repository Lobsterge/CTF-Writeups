info reg xmm1
info reg xmm0
ni
x mm0
info reg xmm0
c
x/2 V
x/2i V
x/2i 0x78043fc2be51
x/2i 0x78043fc904a9
x/3i 0x78043fc904a9
c
x/i 0x74086fe35732
x/2i 0x74086fe35732
c
finish
ni
disass main
ni
ni
ni
n
i
ni
ni
ni
ni
ni
ni
ni
start
ni
start
ni
n
start
ni
info reg xmm0
ni
start
ni
start
ni
x $xmm0
info reg $xmm0
r
start
ni
start
ni
ni
info reg xmm0
x scanf
disass gift
disass gift
disass gifts
ni
x $xnni
x $xmm0
x $mm0
x $xmm0
info reg$xmm0
info regxmm0
info reg xmm0
ni
ni
ni
x system
x/i system
x/i system+20
x/20i system+20
x/100i def ieee_754_conversion(n, sgn_len=1, exp_len=11, mant_len=52):
    """
    Converts an arbitrary precision Floating Point number.
    Note: Since the calculations made by python inherently use floats, the accuracy is poor at high precision.
    :param n: An unsigned integer of length `sgn_len` + `exp_len` + `mant_len` to be decoded as a float
    :param sgn_len: number of sign bits
    :param exp_len: number of exponent bits
    :param mant_len: number of mantissa bits
    :return: IEEE 754 Floating Point representation of the number `n`
    """
    if n >= 2 ** (sgn_len + exp_len + mant_len):
        raise ValueError("Number n is longer than prescribed parameters allows")

    sign = (n & (2 ** sgn_len - 1) * (2 ** (exp_len + mant_len))) >> (exp_len + mant_len)
    exponent_raw = (n & ((2 ** exp_len - 1) * (2 ** mant_len))) >> mant_len
    mantissa = n & (2 ** mant_len - 1)

    sign_mult = 1
    if sign == 1:
        sign_mult = -1

    if exponent_raw == 2 ** exp_len - 1:  # Could be Inf or NaN
        if mantissa == 2 ** mant_len - 1:
            return float('nan')  # NaN

        return sign_mult * float('inf')  # Inf

    exponent = exponent_raw - (2 ** (exp_len - 1) - 1)

    if exponent_raw == 0:
        mant_mult = 0  # Gradual Underflow
    else:
        mant_mult = 1

    for b in range(mant_len - 1, -1, -1):
        if mantissa & (2 ** b):
            mant_mult += 1 / (2 ** (mant_len - b))

    return sign_mult * (2 ** exponent) * mant_mult
x/200i puts
x/20i system+20
x/300i system+20
ni
x/10i 0x7e55c084da84
x/10i 0x7e55c084da84-1
x/10i 0x7e55c084da84-2
x/10i 0x7e55c084da84-1
ni
x/i 0x7d11f884da82
x/i 0x7d11f884da82+1
ni
x/i 0x7d11f884da82
x/10i 0x79361d64da84
x/10i 0x79361d64da84-16
x/10i 0x79361d64da84-20
disass __GI_____strtod_l_internal
ni
ni
ni
ni
ni
ni
ni
ni
x/10a 0x7ffdad76e128
x/10a 0x7ffdad76e128-24
x/10a 0x7ffdad76e128-64
ni
ni
ni
ni
x/i 0x750f5062be50
x/i 0x750f5062be50+1
ni
x/a 0x7fff9b32e678
x/10a 0x7fff9b32e678
x/10a 0x7cb4b962be50
x/i 0x7cb4b962be50
ni
x/a 0x73238982a3e5
x/i 0x73238982a3e5
x/10a 0x7ffe181ea1f8
x/10a 0x7ffe181ea1f8-16
x/10a 0x7ffe181ea1f8-24
x/10a 0x7ffe181ea1f8-64
ni
x/a 0x7ffe2976c008
x/a 0x7ffe2976c008-8
x/s 0x7ffe2976c008-8
ni
ni
ni
ni
x/a 0x7ffff99cfb20
x/s 0x7ffff99cfb20
x/s 0x7ffff99cfb20+8
x/s 0x7ffff99cfb20+8*2
x/s 0x7ffff99cfb20+8*3
x/s 0x7ffff99cfb20+8*4
x/s 0x7ffff99cfb20+8*5
x/s 0x7ffff99cfb20+8*6
x/s 0x7ffff99cfb20+8*7
x/s 0x7ffff99cfb20+8*8
x/s 0x7ffff99cfb20+8*
x/s 0x7ffff99cfb20-8
x/s 0x7ffff99cfb20-8*2
x/s 0x7ffff99cfb20-8*3
x/s 0x7ffff99cfb20-8*4
x/s 0x7ffff99cfb20-8*5
x/s 0x7ffff99cfb20-8*6
x/s 0x7ffff99cfb20-8*7
x/s 0x7ffff99cfb20-8*8
x/s 0x7ffff99cfb20-8*9
x/s 0x7ffff99cfb20-8*0
x/10a 0x7ffff99cfb20
x/200a 0x7ffff99cfb20
ni
ni
ni
finish
ni
ni
x $rsp
x/s $rsp
x/20a $rsp
x/20a $rsp-20
x/20a $rsp-16
x/20a $rsp-8*5
x/20a $rsp-8*6
x/20a $rsp-8*10
x/20a $rsp-8*14
x/20a $rsp-8*17
x/20a $rsp-8*19
x/20a $rsp-8*20
x/20a $rsp-8*21
x/20a $rsp-8*22
x/20a $rsp-8*23
x/20a $rsp-8*24
ni
finish
ni
x/s V
x/s 0x7ffec73ba0b0
ni
x/s 0x7ffe18850e30
x/a 0x7ffe18850e30
x/a 0x7ffe18850e30+8
x/a 0x7ffe18850e30-8
ni
x open
ni
p errno
ni
finish
p errno
x/10a 0x7ffda2e31a50
ni
x/a 0x7ffe4b9c73b8
x/a 0x7ffe4b9c73b8+8
x/a 0x7ffe4b9c73b8+8*2
x/a 0x7ffe4b9c73b8+8*3
x/a 0x7ffe4b9c73b8+8*4
x/a 0x7ffe4b9c73b8+8*5
x/a 0x7ffe4b9c73b8+8*6
x/a 0x7ffe4b9c73b8+8*8
x/a 0x7ffe4b9c73b8+8*10
x/a 0x7ffe4b9c73b8+8*9
ni
ni
x/a 0x7fff0fb41558
x/a 0x7fff0fb41558-8
x/a 0x7fff0fb41558-8*2
x/a 0x7fff0fb41558-8*3
x/s 0x7fff0fb41558-8*3
ni
ni
ni
x/s 0x7ffde50c6990
ni
ni
ni
ni
x/s V
x/s 0x7ffe0e421410
ni
